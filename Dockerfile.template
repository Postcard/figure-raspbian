# Base image 
FROM resin/%%RESIN_MACHINE_NAME%%-node:6

MAINTAINER Benoit Guigal <benoit@figure.co>

ENV DEVICE_TYPE=%%RESIN_MACHINE_NAME%%

# Make sure installation is not asking for prompt 
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -y \
    python \
    python-dev \
    python-setuptools \
    python-pip \
    python-numpy \
    imagemagick \
    pkg-config \
    gcc \
    g++ \
    make \
    build-essential \
    tcl8.5 \
    unzip \
    tar \
    wget \
    bzip2 \
    libjpeg-dev \
    zlib1g-dev \
    libpng12-dev \
    usbutils \
    libfreetype6 \
    libfontconfig \
    git \
    dnsmasq \
    hostapd \
    iproute2 \
    iw \
    libdbus-1-dev \
    libexpat-dev \
    rfkill \
    sysstat \
    procmail \
    vim \
    && rm -rf /var/lib/apt/lists/*


RUN wget --no-check-certificate https://github.com/gonzalo/gphoto2-updater/archive/2.5.10.zip && \
    unzip 2.5.10.zip && \
    cd gphoto2-updater-2.5.10 && \
    chmod +x gphoto2-updater.sh && \
    ./gphoto2-updater.sh


RUN wget --no-check-certificate https://github.com/aeberhardo/phantomjs-linux-armv6l/archive/master.zip && \
    unzip master.zip && \
    rm master.zip && \
    cd phantomjs-linux-armv6l-master && \
    bunzip2 *.bz2 && \
    tar xf *.tar

RUN git clone https://github.com/Postcard/png2pos.git && \
    cd png2pos && \
    git checkout tags/1.0 && \
    git submodule init && \
    git submodule update && \
    make install


RUN mkdir requirements
ADD requirements ./requirements
RUN cd requirements && pip install -r prod.txt


ENV LANG C.UTF-8
ENV C_FORCE_ROOT true
ENV FIGURE_DIR /figure/figureraspbian
ENV IMAGE_DIR /data/images
ENV PHANTOMJS_PATH /phantomjs-linux-armv6l-master/phantomjs-1.9.0-linux-armv6l/bin/phantomjs
ENV DATA_ROOT /data
ENV STATIC_ROOT /data/static
ENV MEDIA_ROOT /data/media
ENV ZEO_SOCKET /data/zeo.sock

COPY ./wifi-connect/assets/bind /etc/bind

WORKDIR /usr/src/wifi-connect/
RUN mkdir -p /usr/src/wifi-connect/
COPY ./wifi-connect/package.json /usr/src/wifi-connect/
RUN JOBS=MAX npm install --unsafe-perm --production && npm cache clean
COPY ./wifi-connect/bower.json ./wifi-connect/.bowerrc /usr/src/wifi-connect/
RUN ./node_modules/.bin/bower --allow-root install && ./node_modules/.bin/bower --allow-root cache clean
COPY ./wifi-connect /usr/src/wifi-connect/
RUN ./node_modules/.bin/coffee -c ./src

RUN touch /var/log/named.log
RUN chown bind /var/log/named.log

VOLUME /var/lib/connman

RUN mkdir -p /usr/share/fonts/opentype
COPY fonts/*.otf /usr/share/fonts/opentype/
RUN fc-cache -f -v

WORKDIR /

COPY figureraspbian /figureraspbian
COPY resources /resources
COPY ./start.sh /
COPY ./supervisord.conf /etc/

RUN mkdir -p /var/log /var/run && chmod 755 /start.sh

CMD ["/bin/bash", "/start.sh"]











