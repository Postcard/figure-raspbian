# Base image 
FROM resin/%%RESIN_MACHINE_NAME%%-node:0.10.40

MAINTAINER Benoit Guigal <benoit@postcardgroup.com>

# Make sure installation is not asking for prompt 
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -y \
    python \
    python-dev \
    python-setuptools \
    python-pip \
    pkg-config \
    gcc \
    g++ \
    make \
    build-essential \
    tcl8.5 \
    unzip \
    tar \
    wget \
    bzip2 \
    libjpeg-dev \
    zlib1g-dev \
    libpng12-dev \
    usbutils \
    libfreetype6 \
    libfontconfig \
    python-numpy \
    ntp \
    ntpdate \
    git \
    bind9 \
    bridge-utils \
    connman \
    iptables \
    libdbus-1-dev \
    libexpat-dev \
    net-tools \
    wireless-tools \
    sysstat \
    && rm -rf /var/lib/apt/lists/* \
    && DD_START_AGENT=0 sh -c "$(curl -L https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/setup_agent.sh)"

RUN mv ~/.datadog-agent/agent/datadog.conf.example ~/.datadog-agent/agent/datadog.conf \
    && sed -i -e"s/^.*non_local_traffic:.*$/non_local_traffic: yes/" ~/.datadog-agent/agent/datadog.conf \
    && sed -i -e"s/^.*log_to_syslog:.*$/log_to_syslog: no/" ~/.datadog-agent/agent/datadog.conf \
    && sed -i "/user=dd-agent/d" ~/.datadog-agent/supervisord/supervisord.conf \
    && rm ~/.datadog-agent/agent/conf.d/network.yaml.default

RUN wget http://download.redis.io/releases/redis-stable.tar.gz && \
    tar xzf redis-stable.tar.gz && \
    rm redis-stable.tar.gz && \
    cd redis-stable && \
    make && \
    make install && \
    cd utils && \
    ./install_server.sh 

RUN wget --no-check-certificate https://github.com/gonzalo/gphoto2-updater/archive/2.5.9.zip && \
    unzip 2.5.9.zip && \
    cd gphoto2-updater-2.5.9 && \
    chmod +x gphoto2-updater.sh && \
    ./gphoto2-updater.sh

RUN wget --no-check-certificate https://github.com/aeberhardo/phantomjs-linux-armv6l/archive/master.zip && \
    unzip master.zip && \
    rm master.zip && \
    cd phantomjs-linux-armv6l-master && \
    bunzip2 *.bz2 && \
    tar xf *.tar

RUN wget --no-check-certificate https://github.com/benoitguigal/python-epson-printer/archive/v1.7.1.zip && \
    unzip v1.7.1.zip && \
    rm v1.7.1.zip && \
    cd python-epson-printer-1.7.1 && \
    python setup.py install

RUN git clone https://github.com/Postcard/png2pos.git && \
    cd png2pos && \
    git checkout tags/1.0 && \
    git submodule init && \
    git submodule update && \
    make install


RUN pip install gphoto2==1.2.1 \
    requests==2.5.1 \
    Pillow==2.6.0 \
    pifacecommon==4.1.2 \
    pifacedigitalio==3.0.5 \
    persistent==4.0.8 \
    ZEO==4.1.0 \
    ZODB==4.1.0 \
    ZODB3==3.11.0 \
    pytz==2015.2 \
    celery[redis]==3.1.17 \
    supervisor==3.1.3 \
    Django==1.8 \
    hashids==1.1.0 \
    ticketrenderer==0.1.9

ENV LANG C.UTF-8
ENV C_FORCE_ROOT true
ENV FIGURE_DIR /figure/figureraspbian
ENV IMAGE_DIR /data/images
ENV PHANTOMJS_PATH /phantomjs-linux-armv6l-master/phantomjs-1.9.0-linux-armv6l/bin/phantomjs
ENV DATA_ROOT /data
ENV STATIC_ROOT /data/static
ENV MEDIA_ROOT /data/media
ENV ZEO_SOCKET /data/zeo.sock

COPY ./wifi-connect/assets/bind /etc/bind
RUN mkdir -p /usr/src/app/
WORKDIR /usr/src/app
COPY ./wifi-connect/package.json ./
RUN JOBS=MAX npm install --unsafe-perm --production && npm cache clean

COPY ./wifi-connect/bower.json ./wifi-connect/.bowerrc ./
RUN ./node_modules/.bin/bower --allow-root install \
	&& ./node_modules/.bin/bower --allow-root cache clean

COPY ./wifi-connect/. ./
RUN ./node_modules/.bin/coffee -c ./src

RUN touch /var/log/named.log
RUN chown bind /var/log/named.log

VOLUME /var/lib/connman

RUN mkdir -p /usr/share/fonts/opentype
COPY fonts/*.otf /usr/share/fonts/opentype/
RUN fc-cache -f -v

WORKDIR /

COPY figureraspbian /figureraspbian
COPY resources /resources
COPY ./start.sh /
COPY ./supervisord.conf /etc/

RUN mkdir -p /var/log /var/run && chmod 755 /start.sh

CMD ["/bin/bash", "/start.sh"]











